{"version":3,"sources":["services/movies-api.js","views/FilmErrorView/FilmErrorView.module.css","views/FilmErrorView/FilmErrorView.js","components/Searchbar/Searchbar.module.css","views/FilmGallery/FilmGallery.module.css","views/FilmsStatus/FilmStatus.module.css","components/Searchbar/Searchbar.js","views/FilmGallery/FilmGallery.js","views/FilmsStatus/FilmsStatus.js","views/MoviesPage/MoviesPage.js"],"names":["BASE_URL","API_KEY","TREND_URL","POSTER_URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesByName","name","fetchMovieDetails","id","console","log","fetchMovieCast","fetchMovieReviews","module","exports","FilmErrorView","message","role","className","s","Searchbar","onSubmit","useState","filmName","setFilmName","searchbar","searchForm","event","preventDefault","trim","toast","value","onChange","currentTarget","toLowerCase","searchFormInput","type","autoComplete","autoFocus","placeholder","searchFormButton","FilmGallery","films","useRouteMatch","list","map","film","item","to","link","image","src","poster_path","alt","title","width","height","Status","FilmsStatus","queryURL","error","setError","status","setStatus","setFilms","fetchFilms","then","newFilms","total_results","results","catch","err","useEffect","FilmPendingView","MoviesPage","history","useHistory","location","useLocation","URLSearchParams","search","get","query","push"],"mappings":"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","file":"static/js/MoviesPage.9489ed54.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'cc0ba8d7ea5bf241e069bff954347f20';\r\n\r\nconst TREND_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\r\n\r\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchTrendingMovies() {\r\n  return fetchWithErrorHandling(TREND_URL);\r\n}\r\n\r\nexport function fetchMoviesByName(name) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}&language=en-US&page=1&include_adult=false`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieDetails(id) {\r\n  console.log(id);\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieCast(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchMovieReviews(id) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"FilmErrorView_message__2X1Fi\"};","import PropTypes from 'prop-types';\nimport s from './FilmErrorView.module.css';\n\nfunction FilmErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p className={s.message}>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nFilmErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default FilmErrorView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__32fY4\",\"searchForm\":\"Searchbar_searchForm__3BHHd\",\"searchFormButton\":\"Searchbar_searchFormButton__pXW8Q\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__2IBGm\",\"searchFormInput\":\"Searchbar_searchFormInput__3hEVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FilmGallery_list__3mD0R\",\"item\":\"FilmGallery_item__2tOeo\",\"link\":\"FilmGallery_link__2W9Vg\",\"image\":\"FilmGallery_image__2zuA6\",\"title\":\"FilmGallery_title__1rMMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"FilmStatus_message__2VzVv\"};","import { ImSearch } from 'react-icons/im';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [filmName, setFilmName] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (filmName.trim() === '') {\n      toast('Please enter search query');\n      return;\n    }\n\n    onSubmit(filmName);\n\n    setFilmName('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form className={s.searchForm} onSubmit={handleSubmit}>\n        <input\n          value={filmName}\n          onChange={event =>\n            setFilmName(event.currentTarget.value.toLowerCase())\n          }\n          className={s.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\" className={s.searchFormButton}>\n          <ImSearch />\n        </button>\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { Link, useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { POSTER_URL } from '../../services/movies-api';\nimport s from './FilmGallery.module.css';\n\nfunction FilmGallery({ films }) {\n  const { url } = useRouteMatch();\n\n  return (\n    <ul className={s.list}>\n      {films.map(film => (\n        <li key={film.id} className={s.item}>\n          <Link to={`${url}/${film.id}`} className={s.link}>\n            <img\n              className={s.image}\n              src={POSTER_URL + film.poster_path}\n              alt={film.title}\n              width=\"300\"\n              height=\"450\"\n            />\n            <p className={s.title}>{film.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFilmGallery.propTypes = {\n  images: PropTypes.array,\n};\n\nexport default FilmGallery;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchMoviesByName } from '../../services/movies-api';\nimport FilmErrorView from '../FilmErrorView';\nimport FilmPendingView from '../FilmPendingView';\nimport FilmGallery from '../FilmGallery';\nimport s from './FilmStatus.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction FilmsStatus({ filmName, queryURL }) {\n  const [error, setError] = useState({});\n  const [status, setStatus] = useState(Status.IDLE);\n  const [films, setFilms] = useState([]);\n\n  const fetchFilms = name => {\n    setStatus(Status.PENDING);\n    fetchMoviesByName(name)\n      .then(newFilms => {\n        if (newFilms.total_results > 0) {\n          setFilms(newFilms.results);\n          setStatus(Status.RESOLVED);\n        } else return Promise.reject(new Error('Invalid request'));\n      })\n      .catch(err => {\n        setError(err);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  useEffect(() => {\n    if (filmName === '' && queryURL) {\n      fetchFilms(queryURL);\n      return;\n    }\n\n    fetchFilms(filmName);\n  }, [filmName, queryURL]);\n\n  if (status === Status.IDLE) {\n    return <p className={s.message}>Please enter your search term</p>;\n  }\n\n  if (status === Status.PENDING) {\n    return <FilmPendingView />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <FilmErrorView message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <FilmGallery films={films} />\n      </>\n    );\n  }\n}\n\nFilmsStatus.propTypes = {\n  filmName: PropTypes.string.isRequired,\n  queryURL: PropTypes.string,\n};\n\nexport default FilmsStatus;\n","import { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Searchbar from '../../components/Searchbar';\nimport FilmsStatus from '../FilmsStatus';\n\nexport default function MoviesPage() {\n  const history = useHistory();\n  const location = useLocation();\n  const [filmName, setFilmName] = useState('');\n  const [films, setFilms] = useState([]);\n\n  const queryURL = new URLSearchParams(location.search).get('query');\n\n  const onQueryChange = query => {\n    history.push({ ...location, search: `query=${query}` });\n  };\n\n  const onSubmit = name => {\n    setFilmName(name);\n    setFilms([]);\n    onQueryChange(name);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      <FilmsStatus filmName={filmName} queryURL={queryURL} />\n    </>\n  );\n}\n"],"sourceRoot":""}